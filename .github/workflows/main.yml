name: CI

on: [push, workflow_dispatch]

jobs:

  build:
    runs-on: windows-2022
    
    steps:
    - name: Install LocalTunnel
      run: npm install -g localtunnel
      
    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        
    - name: Start LocalTunnel
      run: lt --port 3389 --subdomain my-remote-desktop &
      
    - name: Get LocalTunnel URL
      run: |
        $maxAttempts = 20
        $attempts = 0
        $ltUrl = $null
        
        while (($null -eq $ltUrl) -and ($attempts -lt $maxAttempts)) {
            $attempts += 1
            try {
                $ltUrl = Invoke-WebRequest "http://localhost:8080/status" | ConvertFrom-Json | Select-Object -ExpandProperty url
            } catch {
                Write-Host "Error: $_"  # Log the error message
                Write-Host "Waiting for LocalTunnel URL... (attempt $attempts of $maxAttempts)"
                Start-Sleep -Seconds 10  # Increased wait time
            }
        }
        
        if ($null -eq $ltUrl) {
            throw "Failed to get LocalTunnel URL after $maxAttempts attempts."
        }
        
        Write-Host "LocalTunnel URL: $ltUrl"
        
    - name: Wait before cleanup
      run: Start-Sleep -Seconds 54000  # Wait for 15 hours
      
    - name: Cleanup
      if: always()
      run: |
        $ltProcess = Get-Process -Name "lt" -ErrorAction SilentlyContinue
        if ($null -ne $ltProcess) {
            Write-Host "Terminating LocalTunnel process..."
            $ltProcess | Stop-Process -Force
        } else {
            Write-Host "LocalTunnel process not found."
        }
